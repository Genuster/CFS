function load_mAFC_parameters(obj)
%LOAD_MAFC_PARAMETERS Summary of this function goes here
%   Detailed explanation goes here

    % Copy prime textures.
    img_textures = obj.prime_textures;
    obj.mAFC_textures = {};
    % Calculate shift for every mAFC choice.
    left_screen_shift = obj.screen.left.x_pixels/obj.number_of_mAFC_pictures;
    right_screen_shift = obj.screen.right.x_pixels/obj.number_of_mAFC_pictures;

    % Copy prime image used in the trial.
    obj.mAFC_textures{1} = img_textures{obj.stimulus_index};
    % Remove used prime image.
    img_textures(obj.stimulus_index) = [];
    % Choose randomly n-1 not used prime images.
    obj.mAFC_textures = horzcat(obj.mAFC_textures, img_textures{randperm(length(img_textures), obj.number_of_mAFC_pictures-1)});
    % Shuffle used prime image with not used ones.
    obj.mAFC_textures = obj.mAFC_textures(randperm(length(obj.mAFC_textures)));
    obj.mAFC_rects = {zeros(obj.number_of_mAFC_pictures,4);zeros(obj.number_of_mAFC_pictures,4)};
    for i = 1:obj.number_of_mAFC_pictures
        left = [obj.screen.left.rect(1)+left_screen_shift*(i-1), ...
            obj.screen.left.rect(2), ...
            obj.screen.left.rect(1)+left_screen_shift*(i), ...
            obj.screen.left.rect(4)];
        right = [obj.screen.right.rect(1)+right_screen_shift*(i-1), ...
            obj.screen.right.rect(2), ...
            obj.screen.right.rect(1)+right_screen_shift*(i), ...
            obj.screen.right.rect(4)];
        obj.mAFC_rects{1}(i,:) = CFS.get_rect(left, ...
            'Center', ...
            obj.mAFC_images_size, ...
            0, ...
            obj.mAFC_xy_ratio);
        obj.mAFC_rects{2}(i,:) = CFS.get_rect(right, ...
            'Center', ...
            obj.mAFC_images_size, ...
            0, ...
            obj.mAFC_xy_ratio);
    end
end

