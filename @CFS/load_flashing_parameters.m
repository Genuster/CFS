function load_flashing_parameters(obj)
%load_flashing_parameters Loads trial parameters provided in trial matrix.

    % Calculate useful variables from the parameters provided by the user.
    obj.waitframe = Screen('NominalFrameRate', obj.window)/obj.temporal_frequency;
    obj.delay=1/obj.temporal_frequency - 0.5*obj.inter_frame_interval;
    obj.contrasts_in = obj.stimulus_contrast/ ...
        (obj.masks_number_while_fade_in*obj.waitframe+1): ...
        obj.stimulus_contrast/(obj.masks_number_while_fade_in*obj.waitframe+1): ...
        obj.stimulus_contrast;
    obj.contrasts_out = obj.stimulus_contrast/ ...
        (obj.masks_number_while_fade_out*obj.waitframe+1): ...
        obj.stimulus_contrast/(obj.masks_number_while_fade_out*obj.waitframe+1): ...
        obj.stimulus_contrast;
    obj.cumul_masks_number_before_fade_out = ... 
        obj.masks_number_while_stimulus + ...
        obj.masks_number_while_fade_in + ...
        obj.masks_number_before_stimulus;

    obj.mask_indices_while_fade_in = arrayfun(@(n) (floor(obj.masks_number_before_stimulus+(n-1)/obj.waitframe)), ...
        1:(1+obj.masks_number_while_fade_in*obj.waitframe));

    obj.mask_indices_while_fade_out = arrayfun(@(n) (floor(obj.cumul_masks_number_before_fade_out+...
        (obj.masks_number_while_fade_out*obj.waitframe-n)/obj.waitframe)), ...
        1:(obj.masks_number_while_fade_out*obj.waitframe-1));
        
    
end
